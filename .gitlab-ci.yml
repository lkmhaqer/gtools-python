stages:
  - test
  - build
  - deploy

test:
  image: python:2.7-alpine3.7
  stage: test
  before_script:
    - apk -U add gcc libc-dev postgresql-dev
    - pip install -r requirements.txt
  when: on_success
  script:
    - python manage.py test -k

build:
  image: docker:stable
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  when: on_success
  script:
    - docker build --pull -t $LOCAL_TAG -f docker/Dockerfile .
    - docker tag $LOCAL_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $LOCAL_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - tags
    - master

deploy:
  image: docker:stable
  stage: deploy
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  when: on_success
  script:
    - docker pull $LOCAL_TAG
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
    - docker tag $LOCAL_TAG $PROD_TAG
    - docker tag $LOCAL_TAG $HUB_REPO:latest
    - docker push $PROD_TAG
    - docker push $HUB_REPO:latest
  only:
    - tags

services:
  - docker:dind
  - postgres:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  HUB_REPO: index.docker.io/slothlogistics/gtools
  PROD_TAG: $HUB_REPO:$CI_COMMIT_REF_NAME
  LOCAL_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  POSTGRES_DB: gtools
  POSTGRES_USER: gtools
  POSTGRES_PASSWORD: "gtools_password"
